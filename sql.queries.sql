
--Q1
CREATE TABLE STOCK
(COMPANY CHAR(5),
snapdate DATE,
snaptime TIME,
openprice DECIMAL(8,4) NULL ,
highprice DECIMAL(8,4) NULL,
lowprice DECIMAL(8,4) NULL,
closeprice DECIMAL(8,4) NULL,
volume INTEGER NULL)

;

--TEST CODE TO CHECK DATA IN QUESTION 2
SELECT COMPANY,
       AVG(OPENPRICE) + AVG(HIGHPRICE) + AVG(LOWPRICE) + AVG(CLOSEPRICE) AS CHECK1,
       AVG(VOLUME) AS CHECK2,
       COUNT(COMPANY) AS COUNT
FROM STOCK
GROUP BY COMPANY
;
--Q2
SELECT COMPANY, MAX(HIGHPRICE) AS MAX_STOCK_VALUE,
MIN(LOWPRICE) AS MIN_STOCK_VALUE, COUNT(*) AS NUM_ROWS, SUM(VOLUME) AS TOTAL_VOLUME
FROM STOCK
GROUP BY COMPANY 
;

--Q3
SELECT * FROM
(SELECT SNAPDATE, SNAPTIME,
CASE 
	WHEN SNAPTIME IN (SELECT SNAPTIME FROM STOCK WHERE COMPANY = 'IEG01' AND SNAPDATE = '2022-08-11')
	THEN 'OK'	
END AS IEG01,
CASE 
	WHEN SNAPTIME IN (SELECT SNAPTIME FROM STOCK WHERE COMPANY = 'IEG02' AND SNAPDATE = '2022-08-11')
	THEN 'OK'	
END AS IEG02,
CASE 
	WHEN SNAPTIME IN (SELECT SNAPTIME FROM STOCK WHERE COMPANY = 'IEG03' AND SNAPDATE = '2022-08-11')
	THEN 'OK'	
END AS IEG03
FROM STOCK
WHERE SNAPDATE = '2022-08-11'
GROUP BY SNAPDATE, SNAPTIME 
ORDER BY SNAPTIME)
WHERE IEG01 IS NULL OR IEG02 IS NULL OR IEG03 IS NULL
;

;
--Q4 prehistoric join try
SELECT A.COMPANY, DECREASE, INCREASE FROM (SELECT COMPANY, COUNT(*) AS DECREASE FROM STOCK
WHERE OPENPRICE>CLOSEPRICE
GROUP BY COMPANY) AS A, (SELECT COMPANY, COUNT(*) AS INCREASE FROM STOCK
WHERE CLOSEPRICE>OPENPRICE
GROUP BY COMPANY) AS B
WHERE A.COMPANY = B.COMPANY

;
--Q4 THIS IS IT
SELECT C.COMPANY, DECREASE, INCREASE, NOCHANGE
FROM
(SELECT A.COMPANY, DECREASE, INCREASE FROM
(SELECT COMPANY, COUNT(*) AS DECREASE FROM STOCK
WHERE OPENPRICE>CLOSEPRICE
GROUP BY COMPANY) AS A FULL OUTER JOIN (SELECT COMPANY, COUNT(*) AS INCREASE FROM STOCK
WHERE CLOSEPRICE>OPENPRICE
GROUP BY COMPANY) AS B
ON A.COMPANY=B.COMPANY) AS C FULL OUTER JOIN
(SELECT COMPANY, COUNT(*) AS NOCHANGE FROM STOCK
WHERE OPENPRICE=CLOSEPRICE
GROUP BY COMPANY) AS D
ON C.COMPANY=D.COMPANY

;
--Q5

CREATE TABLE DAILY
(COMPANY CHAR(5),
SNAPDATE DATE,
HIGHPRICE DECIMAL(8,4),
LOWPRICE DECIMAL(8,4) ,
VOLUME INTEGER)

;
--Q6
INSERT INTO DAILY
SELECT COMPANY, SNAPDATE, MAX(HIGHPRICE) AS HIGHPRICE, MIN(LOWPRICE) AS LOWPRICE, SUM(VOLUME) AS VOLUME FROM STOCK
GROUP BY COMPANY, SNAPDATE
ORDER BY COMPANY

;
--Q7 part I
CREATE TABLE COMPANY
(ID CHAR(5),
NAME VARCHAR(26),
ADDRESS VARCHAR(20),
CITY VARCHAR(10),
STATE VARCHAR(11),
COUNTRY VARCHAR(5),
FISCAL_ID VARCHAR(9),
EMPLOYEES SMALLINT,
STOCKS INTEGER)

;


;
--Q7 part II
INSERT INTO COMPANY
(ID, NAME, ADDRESS, CITY, STATE, COUNTRY, FISCAL_ID, EMPLOYEES, STOCKS)
VALUES
('IEG01', 'IE Merchant', 'Maria de Molina 32B', 'Madrid',NULL , 'Spain', 'B83812345', 12, 100000),
('IEG02', 'IE Exclusive Club', 'Marble Street 250', 'Hartford', 'Connecticut', 'US', 'X234-123', 25, 248000),
('IEG03', 'IE International Souvenirs',NULL , 'Shanghai',NULL , 'China', NULL, 238, NULL)

;
--Q8 PRIMARY KEY MUST BE NOT NULLABLE:
ALTER TABLE COMPANY
ALTER COLUMN ID SET NOT NULL

;
--Q8.1 to enable ADD PRIMARY KEY:

CALL SYSPROC.ADMIN_CMD ('REORG TABLE COMPANY')

;
--Q8 PRIMARY KEY:
ALTER TABLE COMPANY
ADD PRIMARY KEY (ID)

;
--Q8 FOREIGN DAILY
ALTER TABLE DAILY
 ADD FOREIGN KEY (COMPANY)
 REFERENCES COMPANY(ID)
 ON DELETE CASCADE
 
;
--Q8 FOREIGN STOCK
ALTER TABLE STOCK 
 ADD FOREIGN KEY (COMPANY)
 REFERENCES COMPANY(ID)
 ON DELETE CASCADE
 
;

--Q8 DAILY PRIMARY KEY MUST BE NOT NULLABLE:
ALTER TABLE DAILY
ALTER COLUMN COMPANY SET NOT NULL

;
--Q8 DAILY PRIMARY KEY MUST BE NOT NULLABLE:
ALTER TABLE DAILY
ALTER COLUMN SNAPDATE SET NOT NULL

;

CALL SYSPROC.ADMIN_CMD ('REORG TABLE DAILY')

;
ALTER TABLE DAILY
ADD PRIMARY KEY (COMPANY, SNAPDATE)

;

ALTER TABLE STOCK 
 ADD FOREIGN KEY (COMPANY, SNAPDATE)
 REFERENCES DAILY(COMPANY, SNAPDATE)
 ON DELETE CASCADE
 
 ;
 
--Q9
-- 1. DELETE
DELETE FROM STOCK 
WHERE COMPANY = 'IEG03' AND SNAPDATE = '2022-08-11'
AND (SNAPTIME BETWEEN '09:00:00' AND '09:59:00')
;

-- 2. DELETE
DELETE FROM STOCK 
WHERE COMPANY = 'IEG03' AND SNAPDATE = '2022-08-10'
;
--TO CHECK NEXT DELETES RUN THIS BEFORE AND AFTER:
SELECT COMPANY, COUNT(*) AS CNT FROM STOCK
GROUP BY COMPANY
;
SELECT COMPANY, COUNT(*) AS CNT FROM DAILY
GROUP BY COMPANY
;
-- 3. DELETE
DELETE FROM DAILY 
WHERE COMPANY = 'IEG03' AND SNAPDATE = '2022-08-11'
;
-- 4. DELETE
DELETE FROM COMPANY
WHERE ID = 'IEG03'







SELECT COMPANY, COUNT(*) AS CNT FROM STOCK
GROUP BY COMPANY
;



--TO
SELECT COMPANY, COUNT(*) AS CNT FROM DAILY
GROUP BY COMPANY




